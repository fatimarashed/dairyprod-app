{"ast":null,"code":"import _classCallCheck from\"F:\\\\RBK\\\\dairyprod-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"F:\\\\RBK\\\\dairyprod-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _assertThisInitialized from\"F:\\\\RBK\\\\dairyprod-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";import _inherits from\"F:\\\\RBK\\\\dairyprod-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"F:\\\\RBK\\\\dairyprod-app\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React from\"react\";import axios from\"axios\";import{withRouter}from\"react-router-dom\";import{Card,ListGroup,ListGroupItem,Button,FormControl,Form,Container,Row,Col,CardDeck}from\"react-bootstrap\";import\"./App.css\";//import Product  from './components/Product/Product.js';\nimport UsersProduct from\"./components/UsersProduct/UsersProduct.js\";//import Registeration from './components/Registeration/Registeration.js';\n//import { get } from 'mongoose';\nvar Home=/*#__PURE__*/function(_React$Component){_inherits(Home,_React$Component);var _super=_createSuper(Home);function Home(){var _this;_classCallCheck(this,Home);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={component:null,items:[],products:[],quanity:{id:null,q:0}};_this.handleLanguage=function(products){_this.setState({products:products});};_this.addToCart=function(product){console.log(\"productinfo : \",product);product.user_id=localStorage.getItem(\"user_id\");var that=_assertThisInitialized(_this);axios.post(\"http://localhost:4000/cart\",product).then(function(data){console.log(data);that.props.history.push(\"/Cart\");}).catch(function(err){console.log(err);});};return _this;}_createClass(Home,[{key:\"componentDidMount\",// show the saved data in the home page\nvalue:function componentDidMount(){var _this2=this;axios.get(\"http://localhost:4000/products\").then(function(res){var products=res.data;_this2.setState({products:products});});}//show the add product form\n},{key:\"showAddPrdouctForm\",value:function showAddPrdouctForm(){this.setState({component:/*#__PURE__*/React.createElement(UsersProduct,{onSelectLanguage:this.handleLanguage})});}},{key:\"render\",value:function render(){var _this3=this;var counter=0;// var component;\nconsole.log(this.state);return/*#__PURE__*/React.createElement(\"div\",{className:\"grid-container\"},/*#__PURE__*/React.createElement(\"main\",{className:\"main\"},this.state.component==null?/*#__PURE__*/React.createElement(\"div\",{className:\"content\"},/*#__PURE__*/React.createElement(\"div\",{className:\"about\"},/*#__PURE__*/React.createElement(\"p\",null,\"Welcome to our our website.\",/*#__PURE__*/React.createElement(\"br\",null),\"We are group of farmers in the village,who sell organic and homemade dairy products.\",/*#__PURE__*/React.createElement(\"br\",null),\"If you like to know more about our products you can register and have account.If you already have an account you can log in and choose your favorite product.\")),/*#__PURE__*/React.createElement(\"ul\",null,/*#__PURE__*/React.createElement(\"img\",{className:\"first\",src:\"/images/cheese.jpg\",alt:\"product\"}),/*#__PURE__*/React.createElement(\"img\",{className:\"sec\",src:\"/images/3371550.jpg\",width:\"275\",height:\"180\",alt:\"product\"}),/*#__PURE__*/React.createElement(\"img\",{className:\"lass\",src:\"/images/pure-ghee-1.jpg\",width:\"275\",height:\"180\",alt:\"product\"})),/*#__PURE__*/React.createElement(Container,{className:\"c1\",fluid:\"md\"},this.state.products.map(function(product,i){counter++;if(counter===1){return/*#__PURE__*/React.createElement(Row,{key:i},_this3.state.products[i]?/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(CardDeck,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{className:\"header\"},\"Dairy Product\"),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,\"Product\"),/*#__PURE__*/React.createElement(ListGroup,{className:\"list-group-flush\"},/*#__PURE__*/React.createElement(ListGroupItem,null,\"Name :\",\" \",_this3.state.products[i]?_this3.state.products[i].name:\"\"),/*#__PURE__*/React.createElement(ListGroupItem,null,\"Price :\",\" \",_this3.state.products[i]?_this3.state.products[i].price:\"\")),/*#__PURE__*/React.createElement(Form,{inline:true},/*#__PURE__*/React.createElement(FormControl,{type:\"text\",placeholder:\"count\",className:\"mr-sm-2\",onChange:function onChange(e){return _this3.setState({quanity:{id:_this3.state.products[i]._id,q:e.target.value}});}}),/*#__PURE__*/React.createElement(Button,{className:\"safa\"// variant=\"info\"\n,onClick:function onClick(){_this3.addToCart({product_id:product._id,quantity:parseInt(_this3.state.quanity.q)});}},\"add to cart\")))))):/*#__PURE__*/React.createElement(Col,null),_this3.state.products[i+1]?/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(CardDeck,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{className:\"header\",id:\"\",style:{backgroundColor:\"#ff99cc\"}},\"Dairy Product\"),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,\"Product\"),/*#__PURE__*/React.createElement(ListGroup,{className:\"list-group-flush\"},/*#__PURE__*/React.createElement(ListGroupItem,null,\"Name :\",\" \",_this3.state.products[i+1]?_this3.state.products[i+1].name:\"\",\" \"),/*#__PURE__*/React.createElement(ListGroupItem,null,\" \",\"Price :\",\" \",_this3.state.products[i+1]?_this3.state.products[i+1].price:\"\")),/*#__PURE__*/React.createElement(Form,{inline:true},/*#__PURE__*/React.createElement(FormControl,{type:\"text\",placeholder:\"count\",className:\"mr-sm-2\",onChange:function onChange(e){return _this3.setState({quanity:{id:_this3.state.products[i+1]?_this3.state.products[i+1]._id:\"\",q:e.target.value}});}}),/*#__PURE__*/React.createElement(Button,{className:\"safa\",onClick:function onClick(){_this3.addToCart({product_id:_this3.state.products[i+1]?_this3.state.products[i+1]._id:\"\",quantity:parseInt(_this3.state.quanity.q)});}},\"add to cart\")))))):/*#__PURE__*/React.createElement(Col,null),_this3.state.products[i+2]?/*#__PURE__*/React.createElement(Col,null,/*#__PURE__*/React.createElement(CardDeck,null,/*#__PURE__*/React.createElement(Card,null,/*#__PURE__*/React.createElement(Card.Header,{className:\"header\"},\"Dairy Product\"),/*#__PURE__*/React.createElement(Card.Body,null,/*#__PURE__*/React.createElement(Card.Title,null,\"Product\"),/*#__PURE__*/React.createElement(ListGroup,{className:\"list-group-flush\"},/*#__PURE__*/React.createElement(ListGroupItem,null,\"Name :\",\" \",_this3.state.products[i+2]?_this3.state.products[i+2].name:\"\",\" \"),/*#__PURE__*/React.createElement(ListGroupItem,null,\" \",\"Price :\",\" \",_this3.state.products[i+2]?_this3.state.products[i+2].price:\"\")),/*#__PURE__*/React.createElement(Form,{inline:true},/*#__PURE__*/React.createElement(FormControl,{type:\"text\",placeholder:\"count\",className:\"mr-sm-2\",onChange:function onChange(e){return _this3.setState({quanity:{id:_this3.state.products[i+2]?_this3.state.products[i+2]._id:\"\",q:e.target.value}});}}),/*#__PURE__*/React.createElement(Button,{className:\"safa\"// variant=\"success\"\n,onClick:function onClick(){_this3.addToCart({product_id:_this3.state.products[i+2]?_this3.state.products[i+2]._id:\"\",quantity:parseInt(_this3.state.quanity.q)});}},\"add to cart\")))))):/*#__PURE__*/React.createElement(Col,null));}else{counter++;if(counter===3){counter=0;}return;}//             return (\n//               <div className=\"\" key={i}>\n//                 {/* <Row> */}\n//                 {/* <Col> */}\n//                 <Col>\n//                   <CardDeck>\n//                     <Card>\n//                       <Card.Header className=\"header1\">\n//                         Dairy Product\n//                       </Card.Header>\n//                       <Card.Body>\n//                         <Card.Title>Product</Card.Title>\n//                         <ListGroup className=\"list-group-flush\">\n//                           <ListGroupItem>\n//                             Name : {product.name}{\" \"}\n//                           </ListGroupItem>\n//                           <ListGroupItem>\n//                             {\" \"}\n//                             Price : {product.price}\n//                           </ListGroupItem>\n//                         </ListGroup>\n//                         {/* <Card.Text>\n// Name : {product.name}\n// </Card.Text>\n// <Card.Text>\n// Price : {product.price}\n// </Card.Text> */}\n//                         <Form inline>\n//                           <FormControl\n//                             type=\"text\"\n//                             placeholder=\"count\"\n//                             className=\"mr-sm-2\"\n//                             onChange={(e) =>\n//                               this.setState({\n//                                 quanity: {\n//                                   id: product._id,\n//                                   q: e.target.value,\n//                                 },\n//                               })\n//                             }\n//                           />\n//                           <Button\n//                             variant=\"success\"\n//                             onClick={() => {\n//                               this.addToCart({\n//                                 product_id: product._id,\n//                                 quantity: parseInt(this.state.quanity.q),\n//                               });\n//                             }}\n//                           >\n//                             add to cart\n//                           </Button>\n//                         </Form>\n//                       </Card.Body>\n//                     </Card>\n//                   </CardDeck>\n//                 </Col>\n//                 {/* </Col> */}\n//                 {/* </Row>    */}\n//                 {/* <Card>\n//            <Card.Header>Dairy Product</Card.Header>\n//            <Card.Body>\n//               <Card.Title>Product</Card.Title>\n//               <ListGroup className=\"list-group-flush\">\n//                  <ListGroupItem>Name : {product.name} </ListGroupItem>\n//                  <ListGroupItem> Price : {product.price}</ListGroupItem>\n//               </ListGroup>\n//               <Form inline>\n//                 <FormControl type=\"text\" placeholder=\"count\" className=\"mr-sm-2\"  onChange={(e) => this.setState({quanity:{id:product._id, q:e.target.value}})}/>\n//              <Button variant=\"outline-light\" onClick={\n//           () =>{\n//             this.addToCart({product_id: product._id, quantity:parseInt(this.state.quanity.q)});\n//           }\n//         }>add to cart</Button>\n//         </Form>\n//            </Card.Body>\n//         </Card> */}\n//                 {/* <p key={i}>Name : {product.name} - Price : {product.price}</p>\n//         <input type = 'text'  onChange={(e) => this.setState({quanity:{id:product._id, q:e.target.value}})}></input>\n//         <button   onClick={\n//           () =>{\n//             this.addToCart({product_id: product._id, quantity:parseInt(this.state.quanity.q)});\n//           }\n//         }>add to cart </button> */}\n//               </div>\n//             );\n})),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"button\",{type:\"submit\",className:\"safa\",onClick:this.showAddPrdouctForm.bind(this)},\"Add Product\\\"Farmers\\\"\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null)):this.state.component,/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"br\",null)),/*#__PURE__*/React.createElement(\"footer\",{className:\"footer\"},\"For more information call us at :059-999999\"));}}]);return Home;}(React.Component);export default withRouter(Home);","map":{"version":3,"sources":["F:/RBK/dairyprod-app/src/Home.js"],"names":["React","axios","withRouter","Card","ListGroup","ListGroupItem","Button","FormControl","Form","Container","Row","Col","CardDeck","UsersProduct","Home","state","component","items","products","quanity","id","q","handleLanguage","setState","addToCart","product","console","log","user_id","localStorage","getItem","that","post","then","data","props","history","push","catch","err","get","res","counter","map","i","name","price","e","_id","target","value","product_id","quantity","parseInt","backgroundColor","showAddPrdouctForm","bind","Component"],"mappings":"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,CADH,CAJL,CAAf,EAQD,CAZH,gBAjBF,CAlBF,CAJF,CADF,CADF,CADD,cAgEC,oBAAC,GAAD,MAnMJ,CADF,CAwMD,CAzMD,IAyMO,CACLqB,OAAO,GACP,GAAIA,OAAO,GAAK,CAAhB,CAAmB,CACjBA,OAAO,CAAG,CAAV,CACD,CACD,OACD,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,CAjTA,CADH,CAnCF,cAuVE,8BAvVF,cAyVE,8BACE,IAAI,CAAC,QADP,CAEE,SAAS,CAAC,MAFZ,CAGE,OAAO,CAAE,KAAKa,kBAAL,CAAwBC,IAAxB,CAA6B,IAA7B,CAHX,2BAzVF,cAgWE,8BAhWF,cAiWE,8BAjWF,CADD,CAyWC,KAAKzC,KAAL,CAAWC,SA1Wf,cA4WE,8BA5WF,cA6WE,8BA7WF,CADF,cAiXE,8BAAQ,SAAS,CAAC,QAAlB,gDAjXF,CADF,CAuXD,C,kBAnagBhB,KAAK,CAACyD,S,EAsazB,cAAevD,CAAAA,UAAU,CAACY,IAAD,CAAzB","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n  FormControl,\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  CardDeck,\r\n} from \"react-bootstrap\";\r\nimport \"./App.css\";\r\n//import Product  from './components/Product/Product.js';\r\nimport UsersProduct from \"./components/UsersProduct/UsersProduct.js\";\r\n\r\n//import Registeration from './components/Registeration/Registeration.js';\r\n\r\n//import { get } from 'mongoose';\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    component: null,\r\n    items: [],\r\n    products: [],\r\n    quanity: { id: null, q: 0 },\r\n  };\r\n\r\n  // show the saved data in the home page\r\n  componentDidMount() {\r\n    axios.get(`http://localhost:4000/products`).then((res) => {\r\n      const products = res.data;\r\n      this.setState({ products });\r\n    });\r\n  }\r\n  //show the add product form\r\n  showAddPrdouctForm() {\r\n    this.setState({\r\n      component: <UsersProduct onSelectLanguage={this.handleLanguage} />,\r\n    });\r\n  }\r\n  handleLanguage = (products) => {\r\n    this.setState({ products: products });\r\n  };\r\n\r\n  addToCart = (product) => {\r\n    console.log(\"productinfo : \", product);\r\n    product.user_id = localStorage.getItem(\"user_id\");\r\n    var that = this;\r\n    axios\r\n      .post(\"http://localhost:4000/cart\", product)\r\n      .then((data) => {\r\n        console.log(data);\r\n        that.props.history.push(\"/Cart\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    var counter = 0;\r\n    // var component;\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"grid-container\">\r\n        <main className=\"main\">\r\n          {this.state.component == null ? (\r\n            <div className=\"content\">\r\n              <div className=\"about\">\r\n                <p>\r\n                  {/* <br /> */}\r\n                  Welcome to our our website.\r\n                  <br />\r\n                  We are group of farmers in the village,who sell organic and\r\n                  homemade dairy products.\r\n                  <br />\r\n                  If you like to know more about our products you can register\r\n                  and have account.If you already have an account you can log in\r\n                  and choose your favorite product.\r\n                </p>\r\n              </div>\r\n\r\n              {/* //here is where the images in the home page   */}\r\n              <ul>\r\n                <img className=\"first\" src=\"/images/cheese.jpg\" alt=\"product\" />\r\n\r\n                <img\r\n                  className=\"sec\"\r\n                  src=\"/images/3371550.jpg\"\r\n                  width=\"275\"\r\n                  height=\"180\"\r\n                  alt=\"product\"\r\n                />\r\n\r\n                <img\r\n                  className=\"lass\"\r\n                  src=\"/images/pure-ghee-1.jpg\"\r\n                  width=\"275\"\r\n                  height=\"180\"\r\n                  alt=\"product\"\r\n                />\r\n              </ul>\r\n              <Container className=\"c1\" fluid=\"md\">\r\n                {this.state.products.map((product, i) => {\r\n                  counter++;\r\n                  if (counter === 1) {\r\n                    return (\r\n                      <Row key={i}>\r\n                        {this.state.products[i] ? (\r\n                          <Col>\r\n                            <CardDeck>\r\n                              <Card>\r\n                                <Card.Header className=\"header\">\r\n                                  Dairy Product\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                  <Card.Title>Product</Card.Title>\r\n                                  <ListGroup className=\"list-group-flush\">\r\n                                    <ListGroupItem>\r\n                                      Name :{\" \"}\r\n                                      {this.state.products[i]\r\n                                        ? this.state.products[i].name\r\n                                        : \"\"}\r\n                                    </ListGroupItem>\r\n                                    <ListGroupItem>\r\n                                      Price :{\" \"}\r\n                                      {this.state.products[i]\r\n                                        ? this.state.products[i].price\r\n                                        : \"\"}\r\n                                    </ListGroupItem>\r\n                                  </ListGroup>\r\n\r\n                                  <Form inline>\r\n                                    <FormControl\r\n                                      type=\"text\"\r\n                                      placeholder=\"count\"\r\n                                      className=\"mr-sm-2\"\r\n                                      onChange={(e) =>\r\n                                        this.setState({\r\n                                          quanity: {\r\n                                            id: this.state.products[i]._id,\r\n                                            q: e.target.value,\r\n                                          },\r\n                                        })\r\n                                      }\r\n                                    />\r\n\r\n                                    <Button\r\n                                      className=\"safa\"\r\n                                      // variant=\"info\"\r\n                                      onClick={() => {\r\n                                        this.addToCart({\r\n                                          product_id: product._id,\r\n                                          quantity: parseInt(\r\n                                            this.state.quanity.q\r\n                                          ),\r\n                                        });\r\n                                      }}\r\n                                    >\r\n                                      add to cart\r\n                                    </Button>\r\n                                  </Form>\r\n                                </Card.Body>\r\n                              </Card>\r\n                            </CardDeck>\r\n                          </Col>\r\n                        ) : (\r\n                          <Col></Col>\r\n                        )}\r\n                        {this.state.products[i + 1] ? (\r\n                          <Col>\r\n                            <CardDeck>\r\n                              <Card>\r\n                                <Card.Header\r\n                                  className=\"header\"\r\n                                  id=\"\"\r\n                                  style={{ backgroundColor: \"#ff99cc\" }}\r\n                                >\r\n                                  Dairy Product\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                  <Card.Title>Product</Card.Title>\r\n                                  <ListGroup className=\"list-group-flush\">\r\n                                    <ListGroupItem>\r\n                                      Name :{\" \"}\r\n                                      {this.state.products[i + 1]\r\n                                        ? this.state.products[i + 1].name\r\n                                        : \"\"}{\" \"}\r\n                                    </ListGroupItem>\r\n                                    <ListGroupItem>\r\n                                      {\" \"}\r\n                                      Price :{\" \"}\r\n                                      {this.state.products[i + 1]\r\n                                        ? this.state.products[i + 1].price\r\n                                        : \"\"}\r\n                                    </ListGroupItem>\r\n                                  </ListGroup>\r\n\r\n                                  <Form inline>\r\n                                    <FormControl\r\n                                      type=\"text\"\r\n                                      placeholder=\"count\"\r\n                                      className=\"mr-sm-2\"\r\n                                      onChange={(e) =>\r\n                                        this.setState({\r\n                                          quanity: {\r\n                                            id: this.state.products[i + 1]\r\n                                              ? this.state.products[i + 1]._id\r\n                                              : \"\",\r\n                                            q: e.target.value,\r\n                                          },\r\n                                        })\r\n                                      }\r\n                                    />\r\n\r\n                                    <Button\r\n                                      className=\"safa\"\r\n                                      onClick={() => {\r\n                                        this.addToCart({\r\n                                          product_id: this.state.products[i + 1]\r\n                                            ? this.state.products[i + 1]._id\r\n                                            : \"\",\r\n                                          quantity: parseInt(\r\n                                            this.state.quanity.q\r\n                                          ),\r\n                                        });\r\n                                      }}\r\n                                    >\r\n                                      add to cart\r\n                                    </Button>\r\n                                  </Form>\r\n                                </Card.Body>\r\n                              </Card>\r\n                            </CardDeck>\r\n                          </Col>\r\n                        ) : (\r\n                          <Col></Col>\r\n                        )}\r\n                        {this.state.products[i + 2] ? (\r\n                          <Col>\r\n                            <CardDeck>\r\n                              <Card>\r\n                                <Card.Header className=\"header\">\r\n                                  Dairy Product\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                  <Card.Title>Product</Card.Title>\r\n                                  <ListGroup className=\"list-group-flush\">\r\n                                    <ListGroupItem>\r\n                                      Name :{\" \"}\r\n                                      {this.state.products[i + 2]\r\n                                        ? this.state.products[i + 2].name\r\n                                        : \"\"}{\" \"}\r\n                                    </ListGroupItem>\r\n                                    <ListGroupItem>\r\n                                      {\" \"}\r\n                                      Price :{\" \"}\r\n                                      {this.state.products[i + 2]\r\n                                        ? this.state.products[i + 2].price\r\n                                        : \"\"}\r\n                                    </ListGroupItem>\r\n                                  </ListGroup>\r\n\r\n                                  <Form inline>\r\n                                    <FormControl\r\n                                      type=\"text\"\r\n                                      placeholder=\"count\"\r\n                                      className=\"mr-sm-2\"\r\n                                      onChange={(e) =>\r\n                                        this.setState({\r\n                                          quanity: {\r\n                                            id: this.state.products[i + 2]\r\n                                              ? this.state.products[i + 2]._id\r\n                                              : \"\",\r\n                                            q: e.target.value,\r\n                                          },\r\n                                        })\r\n                                      }\r\n                                    />\r\n\r\n                                    <Button\r\n                                      className=\"safa\"\r\n                                      // variant=\"success\"\r\n                                      onClick={() => {\r\n                                        this.addToCart({\r\n                                          product_id: this.state.products[i + 2]\r\n                                            ? this.state.products[i + 2]._id\r\n                                            : \"\",\r\n                                          quantity: parseInt(\r\n                                            this.state.quanity.q\r\n                                          ),\r\n                                        });\r\n                                      }}\r\n                                    >\r\n                                      add to cart\r\n                                    </Button>\r\n                                  </Form>\r\n                                </Card.Body>\r\n                              </Card>\r\n                            </CardDeck>\r\n                          </Col>\r\n                        ) : (\r\n                          <Col></Col>\r\n                        )}\r\n                      </Row>\r\n                    );\r\n                  } else {\r\n                    counter++;\r\n                    if (counter === 3) {\r\n                      counter = 0;\r\n                    }\r\n                    return;\r\n                  }\r\n                  //             return (\r\n                  //               <div className=\"\" key={i}>\r\n                  //                 {/* <Row> */}\r\n                  //                 {/* <Col> */}\r\n                  //                 <Col>\r\n                  //                   <CardDeck>\r\n                  //                     <Card>\r\n                  //                       <Card.Header className=\"header1\">\r\n                  //                         Dairy Product\r\n                  //                       </Card.Header>\r\n                  //                       <Card.Body>\r\n                  //                         <Card.Title>Product</Card.Title>\r\n                  //                         <ListGroup className=\"list-group-flush\">\r\n                  //                           <ListGroupItem>\r\n                  //                             Name : {product.name}{\" \"}\r\n                  //                           </ListGroupItem>\r\n                  //                           <ListGroupItem>\r\n                  //                             {\" \"}\r\n                  //                             Price : {product.price}\r\n                  //                           </ListGroupItem>\r\n                  //                         </ListGroup>\r\n                  //                         {/* <Card.Text>\r\n                  // Name : {product.name}\r\n                  // </Card.Text>\r\n\r\n                  // <Card.Text>\r\n                  // Price : {product.price}\r\n                  // </Card.Text> */}\r\n\r\n                  //                         <Form inline>\r\n                  //                           <FormControl\r\n                  //                             type=\"text\"\r\n                  //                             placeholder=\"count\"\r\n                  //                             className=\"mr-sm-2\"\r\n                  //                             onChange={(e) =>\r\n                  //                               this.setState({\r\n                  //                                 quanity: {\r\n                  //                                   id: product._id,\r\n                  //                                   q: e.target.value,\r\n                  //                                 },\r\n                  //                               })\r\n                  //                             }\r\n                  //                           />\r\n\r\n                  //                           <Button\r\n                  //                             variant=\"success\"\r\n                  //                             onClick={() => {\r\n                  //                               this.addToCart({\r\n                  //                                 product_id: product._id,\r\n                  //                                 quantity: parseInt(this.state.quanity.q),\r\n                  //                               });\r\n                  //                             }}\r\n                  //                           >\r\n                  //                             add to cart\r\n                  //                           </Button>\r\n                  //                         </Form>\r\n                  //                       </Card.Body>\r\n                  //                     </Card>\r\n                  //                   </CardDeck>\r\n                  //                 </Col>\r\n                  //                 {/* </Col> */}\r\n\r\n                  //                 {/* </Row>    */}\r\n\r\n                  //                 {/* <Card>\r\n                  //            <Card.Header>Dairy Product</Card.Header>\r\n                  //            <Card.Body>\r\n                  //               <Card.Title>Product</Card.Title>\r\n                  //               <ListGroup className=\"list-group-flush\">\r\n                  //                  <ListGroupItem>Name : {product.name} </ListGroupItem>\r\n                  //                  <ListGroupItem> Price : {product.price}</ListGroupItem>\r\n\r\n                  //               </ListGroup>\r\n                  //               <Form inline>\r\n                  //                 <FormControl type=\"text\" placeholder=\"count\" className=\"mr-sm-2\"  onChange={(e) => this.setState({quanity:{id:product._id, q:e.target.value}})}/>\r\n\r\n                  //              <Button variant=\"outline-light\" onClick={\r\n                  //           () =>{\r\n                  //             this.addToCart({product_id: product._id, quantity:parseInt(this.state.quanity.q)});\r\n                  //           }\r\n                  //         }>add to cart</Button>\r\n                  //         </Form>\r\n                  //            </Card.Body>\r\n                  //         </Card> */}\r\n\r\n                  //                 {/* <p key={i}>Name : {product.name} - Price : {product.price}</p>\r\n\r\n                  //         <input type = 'text'  onChange={(e) => this.setState({quanity:{id:product._id, q:e.target.value}})}></input>\r\n                  //         <button   onClick={\r\n                  //           () =>{\r\n                  //             this.addToCart({product_id: product._id, quantity:parseInt(this.state.quanity.q)});\r\n                  //           }\r\n                  //         }>add to cart </button> */}\r\n                  //               </div>\r\n                  //             );\r\n                })}\r\n              </Container>\r\n              <br />\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"safa\"\r\n                onClick={this.showAddPrdouctForm.bind(this)}\r\n              >\r\n                Add Product\"Farmers\"\r\n              </button>\r\n              <br />\r\n              <br />\r\n\r\n              {/* <Router> */}\r\n\r\n              {/* </Router> */}\r\n            </div>\r\n          ) : (\r\n            this.state.component\r\n          )}\r\n          <br />\r\n          <br />\r\n        </main>\r\n\r\n        <footer className=\"footer\">\r\n          For more information call us at :059-999999\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Home);\r\n"]},"metadata":{},"sourceType":"module"}