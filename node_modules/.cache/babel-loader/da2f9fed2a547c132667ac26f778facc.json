{"ast":null,"code":"var _jsxFileName = \"F:\\\\RBK\\\\dairyprod-app\\\\src\\\\Home.js\";\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { Card, ListGroup, ListGroupItem, Button, FormControl, Form, Container, Row, Col, CardDeck } from \"react-bootstrap\";\nimport \"./App.css\"; //import Product  from './components/Product/Product.js';\n\nimport UsersProduct from \"./components/UsersProduct/UsersProduct.js\"; //import Registeration from './components/Registeration/Registeration.js';\n//import { get } from 'mongoose';\n\nclass Home extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      component: null,\n      items: [],\n      products: [],\n      quanity: {\n        id: null,\n        q: 0\n      }\n    };\n\n    this.handleLanguage = products => {\n      this.setState({\n        products: products\n      });\n    };\n\n    this.addToCart = product => {\n      console.log(\"productinfo : \", product);\n      product.user_id = localStorage.getItem(\"user_id\");\n      var that = this;\n      axios.post(\"http://localhost:4000/cart\", product).then(data => {\n        console.log(data);\n        that.props.history.push(\"/Cart\");\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n  }\n\n  // show the saved data in the home page\n  componentDidMount() {\n    axios.get(`http://localhost:4000/products`).then(res => {\n      const products = res.data;\n      this.setState({\n        products\n      });\n    });\n  } //show the add product form\n\n\n  showAddPrdouctForm() {\n    this.setState({\n      component: /*#__PURE__*/React.createElement(UsersProduct, {\n        onSelectLanguage: this.handleLanguage,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 18\n        }\n      })\n    });\n  }\n\n  render() {\n    var counter = 0;\n    var component;\n    console.log(this.state);\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"grid-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"main\", {\n      className: \"main\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, this.state.component == null ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"about\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }), \"Welcome to our our website.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 19\n      }\n    }), \"We are group of farmers in the village,who sell organic and homemade dairy products.\", /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 19\n      }\n    }), \"If you like to know more about our products you can register and have account.If you already have an account you can log in and choose your favorite product.\")), /*#__PURE__*/React.createElement(Container, {\n      className: \"c1\",\n      fluid: \"md\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }\n    }, this.state.products.map((product, i) => {\n      counter++;\n\n      if (counter == 1) {\n        return /*#__PURE__*/React.createElement(Row, {\n          key: i,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 23\n          }\n        }, this.state.products[i] ? /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(CardDeck, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Card.Header, {\n          className: \"header1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 31\n          }\n        }, \"Dairy Product\"), /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 33\n          }\n        }, \"Product\"), /*#__PURE__*/React.createElement(ListGroup, {\n          className: \"list-group-flush\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(ListGroupItem, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 35\n          }\n        }, \"Name : \", this.state.products[i] ? this.state.products[i].name : \"\"), /*#__PURE__*/React.createElement(ListGroupItem, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 35\n          }\n        }, \"Price : \", this.state.products[i] ? this.state.products[i].price : \"\")), /*#__PURE__*/React.createElement(Form, {\n          inline: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(FormControl, {\n          type: \"text\",\n          placeholder: \"count\",\n          className: \"mr-sm-2\",\n          onChange: e => this.setState({\n            quanity: {\n              id: this.state.products[i]._id,\n              q: e.target.value\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 35\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          className: \"safa\" // variant=\"info\"\n          ,\n          onClick: () => {\n            this.addToCart({\n              product_id: product._id,\n              quantity: parseInt(this.state.quanity.q)\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 35\n          }\n        }, \"add to cart\")))))) : /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 26\n          }\n        }), this.state.products[i + 1] ? /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(CardDeck, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Card.Header, {\n          className: \"header1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 31\n          }\n        }, \"Dairy Product\"), /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 33\n          }\n        }, \"Product\"), /*#__PURE__*/React.createElement(ListGroup, {\n          className: \"list-group-flush\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(ListGroupItem, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 35\n          }\n        }, \"Name : \", this.state.products[i + 1] ? this.state.products[i + 1].name : \"\", \" \"), /*#__PURE__*/React.createElement(ListGroupItem, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 35\n          }\n        }, \" \", \"Price : \", this.state.products[i + 1] ? this.state.products[i + 1].price : \"\")), /*#__PURE__*/React.createElement(Form, {\n          inline: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(FormControl, {\n          type: \"text\",\n          placeholder: \"count\",\n          className: \"mr-sm-2\",\n          onChange: e => this.setState({\n            quanity: {\n              id: this.state.products[i + 1] ? this.state.products[i + 1]._id : \"\",\n              q: e.target.value\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 35\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          className: \"safa\",\n          onClick: () => {\n            this.addToCart({\n              product_id: this.state.products[i + 1] ? this.state.products[i + 1]._id : \"\",\n              quantity: parseInt(this.state.quanity.q)\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 35\n          }\n        }, \"add to cart\")))))) : /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 27\n          }\n        }), this.state.products[i + 2] ? /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(CardDeck, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 27\n          }\n        }, /*#__PURE__*/React.createElement(Card, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Card.Header, {\n          className: \"header1\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 31\n          }\n        }, \"Dairy Product\"), /*#__PURE__*/React.createElement(Card.Body, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 31\n          }\n        }, /*#__PURE__*/React.createElement(Card.Title, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 33\n          }\n        }, \"Product\"), /*#__PURE__*/React.createElement(ListGroup, {\n          className: \"list-group-flush\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(ListGroupItem, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 35\n          }\n        }, \"Name : \", this.state.products[i + 2] ? this.state.products[i + 2].name : \"\", \" \"), /*#__PURE__*/React.createElement(ListGroupItem, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 35\n          }\n        }, \" \", \"Price : \", this.state.products[i + 2] ? this.state.products[i + 2].price : \"\")), /*#__PURE__*/React.createElement(Form, {\n          inline: true,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 33\n          }\n        }, /*#__PURE__*/React.createElement(FormControl, {\n          type: \"text\",\n          placeholder: \"count\",\n          className: \"mr-sm-2\",\n          onChange: e => this.setState({\n            quanity: {\n              id: this.state.products[i + 2] ? this.state.products[i + 2]._id : \"\",\n              q: e.target.value\n            }\n          }),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 35\n          }\n        }), /*#__PURE__*/React.createElement(Button, {\n          className: \"safa\" // variant=\"success\"\n          ,\n          onClick: () => {\n            this.addToCart({\n              product_id: this.state.products[i + 2] ? this.state.products[i + 2]._id : '',\n              quantity: parseInt(this.state.quanity.q)\n            });\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 1\n          }\n        }, \"add to cart\")))))) : /*#__PURE__*/React.createElement(Col, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 27\n          }\n        }));\n      } else {\n        counter++;\n\n        if (counter == 3) {\n          counter = 0;\n        }\n\n        return;\n      } //             return (\n      //               <div className=\"\" key={i}>\n      //                 {/* <Row> */}\n      //                 {/* <Col> */}\n      //                 <Col>\n      //                   <CardDeck>\n      //                     <Card>\n      //                       <Card.Header className=\"header1\">\n      //                         Dairy Product\n      //                       </Card.Header>\n      //                       <Card.Body>\n      //                         <Card.Title>Product</Card.Title>\n      //                         <ListGroup className=\"list-group-flush\">\n      //                           <ListGroupItem>\n      //                             Name : {product.name}{\" \"}\n      //                           </ListGroupItem>\n      //                           <ListGroupItem>\n      //                             {\" \"}\n      //                             Price : {product.price}\n      //                           </ListGroupItem>\n      //                         </ListGroup>\n      //                         {/* <Card.Text>\n      // Name : {product.name}\n      // </Card.Text>\n      // <Card.Text>\n      // Price : {product.price}\n      // </Card.Text> */}\n      //                         <Form inline>\n      //                           <FormControl\n      //                             type=\"text\"\n      //                             placeholder=\"count\"\n      //                             className=\"mr-sm-2\"\n      //                             onChange={(e) =>\n      //                               this.setState({\n      //                                 quanity: {\n      //                                   id: product._id,\n      //                                   q: e.target.value,\n      //                                 },\n      //                               })\n      //                             }\n      //                           />\n      //                           <Button\n      //                             variant=\"success\"\n      //                             onClick={() => {\n      //                               this.addToCart({\n      //                                 product_id: product._id,\n      //                                 quantity: parseInt(this.state.quanity.q),\n      //                               });\n      //                             }}\n      //                           >\n      //                             add to cart\n      //                           </Button>\n      //                         </Form>\n      //                       </Card.Body>\n      //                     </Card>\n      //                   </CardDeck>\n      //                 </Col>\n      //                 {/* </Col> */}\n      //                 {/* </Row>    */}\n      //                 {/* <Card>\n      //            <Card.Header>Dairy Product</Card.Header>\n      //            <Card.Body>\n      //               <Card.Title>Product</Card.Title>\n      //               <ListGroup className=\"list-group-flush\">\n      //                  <ListGroupItem>Name : {product.name} </ListGroupItem>\n      //                  <ListGroupItem> Price : {product.price}</ListGroupItem>\n      //               </ListGroup>\n      //               <Form inline>\n      //                 <FormControl type=\"text\" placeholder=\"count\" className=\"mr-sm-2\"  onChange={(e) => this.setState({quanity:{id:product._id, q:e.target.value}})}/>\n      //              <Button variant=\"outline-light\" onClick={\n      //           () =>{\n      //             this.addToCart({product_id: product._id, quantity:parseInt(this.state.quanity.q)});\n      //           }\n      //         }>add to cart</Button>\n      //         </Form>\n      //            </Card.Body>\n      //         </Card> */}\n      //                 {/* <p key={i}>Name : {product.name} - Price : {product.price}</p>\n      //         <input type = 'text'  onChange={(e) => this.setState({quanity:{id:product._id, q:e.target.value}})}></input>\n      //         <button   onClick={\n      //           () =>{\n      //             this.addToCart({product_id: product._id, quantity:parseInt(this.state.quanity.q)});\n      //           }\n      //         }>add to cart </button> */}\n      //               </div>\n      //             );\n\n    })), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"submit\",\n      className: \"btn\",\n      onClick: this.showAddPrdouctForm.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 366,\n        columnNumber: 15\n      }\n    }, \"Add Product\\\"Farmers\\\"\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 373,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 374,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/Registeration\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 19\n      }\n    }, \"Registeration\")), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      to: \"/Login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 19\n      }\n    }, \"Log In\")))) : this.state.component, /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"footer\", {\n      className: \"footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 9\n      }\n    }, \"For more information call us at :059-999999\"));\n  }\n\n}\n\nexport default withRouter(Home);","map":{"version":3,"sources":["F:/RBK/dairyprod-app/src/Home.js"],"names":["React","axios","Link","withRouter","Card","ListGroup","ListGroupItem","Button","FormControl","Form","Container","Row","Col","CardDeck","UsersProduct","Home","Component","state","component","items","products","quanity","id","q","handleLanguage","setState","addToCart","product","console","log","user_id","localStorage","getItem","that","post","then","data","props","history","push","catch","err","componentDidMount","get","res","showAddPrdouctForm","render","counter","map","i","name","price","e","_id","target","value","product_id","quantity","parseInt","bind"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n  FormControl,\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  CardDeck,\r\n} from \"react-bootstrap\";\r\nimport \"./App.css\";\r\n//import Product  from './components/Product/Product.js';\r\nimport UsersProduct from \"./components/UsersProduct/UsersProduct.js\";\r\n\r\n//import Registeration from './components/Registeration/Registeration.js';\r\n\r\n//import { get } from 'mongoose';\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    component: null,\r\n    items: [],\r\n    products: [],\r\n    quanity: { id: null, q: 0 },\r\n  };\r\n\r\n  // show the saved data in the home page\r\n  componentDidMount() {\r\n    axios.get(`http://localhost:4000/products`).then((res) => {\r\n      const products = res.data;\r\n      this.setState({ products });\r\n    });\r\n  }\r\n  //show the add product form\r\n  showAddPrdouctForm() {\r\n    this.setState({\r\n      component: <UsersProduct onSelectLanguage={this.handleLanguage} />,\r\n    });\r\n  }\r\n  handleLanguage = (products) => {\r\n    this.setState({ products: products });\r\n  };\r\n\r\n  addToCart = (product) => {\r\n    console.log(\"productinfo : \", product);\r\n    product.user_id = localStorage.getItem(\"user_id\");\r\n    var that = this;\r\n    axios\r\n      .post(\"http://localhost:4000/cart\", product)\r\n      .then((data) => {\r\n        console.log(data);\r\n        that.props.history.push(\"/Cart\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    var counter = 0;\r\n    var component;\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"grid-container\">\r\n        <main className=\"main\">\r\n          {this.state.component == null ? (\r\n            <div className=\"content\">\r\n              <div className=\"about\">\r\n                <p>\r\n                  <br />\r\n                  Welcome to our our website.\r\n                  <br />\r\n                  We are group of farmers in the village,who sell organic and\r\n                  homemade dairy products.\r\n                  <br />\r\n                  If you like to know more about our products you can register\r\n                  and have account.If you already have an account you can log in\r\n                  and choose your favorite product.\r\n                </p>\r\n              </div>\r\n\r\n              {/* here is where the images in the home page  */}\r\n              {/* <ul className=\"products\"> \r\n           \r\n            \r\n                     <img src=\"/images/cheese.jpg\" alt=\"product\"/>\r\n\r\n                     <img src=\"/images/cow.jpg\" alt=\"product\"/>\r\n\r\n                     <img src=\"/images/pure-ghee-1.jpg\" width=\"275\" height=\"180\" alt=\"product\"\r\n                     />\r\n           \r\n           \r\n           \r\n\r\n                </ul> */}\r\n              <Container className=\"c1\" fluid=\"md\">\r\n                {this.state.products.map((product, i) => {\r\n                  counter++;\r\n                  if (counter == 1) {\r\n                    return (\r\n                      <Row key={i}>\r\n                        {this.state.products[i]?\r\n                        <Col>\r\n                          <CardDeck>\r\n                            <Card>\r\n                              <Card.Header className=\"header1\">\r\n                                Dairy Product\r\n                              </Card.Header>\r\n                              <Card.Body>\r\n                                <Card.Title>Product</Card.Title>\r\n                                <ListGroup className=\"list-group-flush\">\r\n                                  <ListGroupItem>\r\n                                    Name : {this.state.products[i]?this.state.products[i].name:\"\"}\r\n                                  </ListGroupItem>\r\n                                  <ListGroupItem>\r\n                        \r\n                                    Price : {this.state.products[i]?this.state.products[i].price:\"\"}\r\n                                  </ListGroupItem>\r\n                                </ListGroup>\r\n\r\n                                <Form inline>\r\n                                  <FormControl type=\"text\" placeholder=\"count\" className=\"mr-sm-2\"  onChange={(e) => this.setState({quanity:{id:this.state.products[i]._id, q:e.target.value}})}/>\r\n\r\n\r\n                                  <Button className=\"safa\"\r\n                                              // variant=\"info\"\r\n                                              onClick={() => {\r\n                                                this.addToCart({\r\n                                                  product_id: product._id,\r\n                                                  quantity: parseInt(this.state.quanity.q),\r\n                                                });\r\n                                              }}\r\n                                            >\r\n                                              add to cart\r\n                                            </Button>\r\n                                              \r\n                                </Form>\r\n                              </Card.Body>\r\n                            </Card>\r\n                          </CardDeck>\r\n                        </Col>\r\n                        :<Col></Col>}\r\n                          {this.state.products[i +1]?\r\n                        <Col>\r\n                          <CardDeck>\r\n                            <Card>\r\n                              <Card.Header className=\"header1\">\r\n                                Dairy Product\r\n                              </Card.Header>\r\n                              <Card.Body>\r\n                                <Card.Title>Product</Card.Title>\r\n                                <ListGroup className=\"list-group-flush\">\r\n                                  <ListGroupItem>\r\n                                    Name : {this.state.products[i + 1]?this.state.products[i + 1].name:\"\"}{\" \"}\r\n                                  </ListGroupItem>\r\n                                  <ListGroupItem>\r\n                                    {\" \"}\r\n                                    Price : {this.state.products[i + 1]?this.state.products[i + 1].price:\"\"}\r\n                                  </ListGroupItem>\r\n                                </ListGroup>\r\n\r\n                                <Form inline>\r\n                                  <FormControl\r\n                                    type=\"text\"\r\n                                    placeholder=\"count\"\r\n                                    className=\"mr-sm-2\"\r\n                                    onChange={(e) =>\r\n                                      this.setState({\r\n                                        quanity: {\r\n                                          id: this.state.products[i + 1]?this.state.products[i + 1]._id:\"\",\r\n                                          q: e.target.value,\r\n                                        },\r\n                                      })\r\n                                    }\r\n                                  />\r\n\r\n                                  <Button className=\"safa\"\r\n                                    \r\n                                    onClick={() => {\r\n                                      this.addToCart({\r\n                                        product_id: this.state.products[i + 1]?this.state.products[i + 1]\r\n                                          ._id:\"\",\r\n                                        quantity: parseInt(\r\n                                          this.state.quanity.q\r\n                                        ),\r\n                                      });\r\n                                    }}\r\n                                   \r\n                                  >\r\n                                    add to cart\r\n                                  </Button>\r\n                                </Form>\r\n                              </Card.Body>\r\n                            </Card>\r\n                          </CardDeck>\r\n                        </Col>\r\n                         :<Col></Col>}\r\n                            {this.state.products[i +2]?\r\n                        <Col>\r\n                          <CardDeck>\r\n                            <Card>\r\n                              <Card.Header className=\"header1\">\r\n                                Dairy Product\r\n                              </Card.Header>\r\n                              <Card.Body>\r\n                                <Card.Title>Product</Card.Title>\r\n                                <ListGroup className=\"list-group-flush\">\r\n                                  <ListGroupItem>\r\n                                    Name : {this.state.products[i + 2]?this.state.products[i + 2].name:\"\"}{\" \"}\r\n                                  </ListGroupItem>\r\n                                  <ListGroupItem>\r\n                                    {\" \"}\r\n                                    Price : {this.state.products[i + 2]?this.state.products[i + 2].price:\"\"}\r\n                                  </ListGroupItem>\r\n                                </ListGroup>\r\n\r\n                                <Form inline>\r\n                                  <FormControl\r\n                                    type=\"text\"\r\n                                    placeholder=\"count\"\r\n                                    className=\"mr-sm-2\"\r\n                                    onChange={(e) =>\r\n                                      this.setState({\r\n                                        quanity: {\r\n                                          id: this.state.products[i + 2]?this.state.products[i + 2]._id:\"\",\r\n                                          q: e.target.value,\r\n                                        },\r\n                                      })\r\n                                    }\r\n                                  />\r\n\r\n<Button className=\"safa\"\r\n                                    // variant=\"success\"\r\n                                    onClick={() => {\r\n                                      this.addToCart({\r\n                                        product_id:  this.state.products[i + 2]?this.state.products[i + 2]._id:'',\r\n                                        quantity: parseInt(\r\n                                          this.state.quanity.q\r\n                                        ),\r\n                                      });\r\n                                    }}\r\n                                  >\r\n                                    add to cart\r\n                                  </Button>\r\n                                </Form>\r\n                              </Card.Body>\r\n                            </Card>\r\n                          </CardDeck>\r\n                        </Col>\r\n                         :<Col></Col>}\r\n                      </Row>\r\n                    );\r\n                  } else {\r\n                    counter++;\r\n                    if (counter == 3) {\r\n                      counter = 0;\r\n                    }\r\n                    return;\r\n                  }\r\n                  //             return (\r\n                  //               <div className=\"\" key={i}>\r\n                  //                 {/* <Row> */}\r\n                  //                 {/* <Col> */}\r\n                  //                 <Col>\r\n                  //                   <CardDeck>\r\n                  //                     <Card>\r\n                  //                       <Card.Header className=\"header1\">\r\n                  //                         Dairy Product\r\n                  //                       </Card.Header>\r\n                  //                       <Card.Body>\r\n                  //                         <Card.Title>Product</Card.Title>\r\n                  //                         <ListGroup className=\"list-group-flush\">\r\n                  //                           <ListGroupItem>\r\n                  //                             Name : {product.name}{\" \"}\r\n                  //                           </ListGroupItem>\r\n                  //                           <ListGroupItem>\r\n                  //                             {\" \"}\r\n                  //                             Price : {product.price}\r\n                  //                           </ListGroupItem>\r\n                  //                         </ListGroup>\r\n                  //                         {/* <Card.Text>\r\n                  // Name : {product.name}\r\n                  // </Card.Text>\r\n\r\n                  // <Card.Text>\r\n                  // Price : {product.price}\r\n                  // </Card.Text> */}\r\n\r\n                  //                         <Form inline>\r\n                  //                           <FormControl\r\n                  //                             type=\"text\"\r\n                  //                             placeholder=\"count\"\r\n                  //                             className=\"mr-sm-2\"\r\n                  //                             onChange={(e) =>\r\n                  //                               this.setState({\r\n                  //                                 quanity: {\r\n                  //                                   id: product._id,\r\n                  //                                   q: e.target.value,\r\n                  //                                 },\r\n                  //                               })\r\n                  //                             }\r\n                  //                           />\r\n\r\n                  //                           <Button\r\n                  //                             variant=\"success\"\r\n                  //                             onClick={() => {\r\n                  //                               this.addToCart({\r\n                  //                                 product_id: product._id,\r\n                  //                                 quantity: parseInt(this.state.quanity.q),\r\n                  //                               });\r\n                  //                             }}\r\n                  //                           >\r\n                  //                             add to cart\r\n                  //                           </Button>\r\n                  //                         </Form>\r\n                  //                       </Card.Body>\r\n                  //                     </Card>\r\n                  //                   </CardDeck>\r\n                  //                 </Col>\r\n                  //                 {/* </Col> */}\r\n\r\n                  //                 {/* </Row>    */}\r\n\r\n                  //                 {/* <Card>\r\n                  //            <Card.Header>Dairy Product</Card.Header>\r\n                  //            <Card.Body>\r\n                  //               <Card.Title>Product</Card.Title>\r\n                  //               <ListGroup className=\"list-group-flush\">\r\n                  //                  <ListGroupItem>Name : {product.name} </ListGroupItem>\r\n                  //                  <ListGroupItem> Price : {product.price}</ListGroupItem>\r\n\r\n                  //               </ListGroup>\r\n                  //               <Form inline>\r\n                  //                 <FormControl type=\"text\" placeholder=\"count\" className=\"mr-sm-2\"  onChange={(e) => this.setState({quanity:{id:product._id, q:e.target.value}})}/>\r\n\r\n                  //              <Button variant=\"outline-light\" onClick={\r\n                  //           () =>{\r\n                  //             this.addToCart({product_id: product._id, quantity:parseInt(this.state.quanity.q)});\r\n                  //           }\r\n                  //         }>add to cart</Button>\r\n                  //         </Form>\r\n                  //            </Card.Body>\r\n                  //         </Card> */}\r\n\r\n                  //                 {/* <p key={i}>Name : {product.name} - Price : {product.price}</p>\r\n\r\n                  //         <input type = 'text'  onChange={(e) => this.setState({quanity:{id:product._id, q:e.target.value}})}></input>\r\n                  //         <button   onClick={\r\n                  //           () =>{\r\n                  //             this.addToCart({product_id: product._id, quantity:parseInt(this.state.quanity.q)});\r\n                  //           }\r\n                  //         }>add to cart </button> */}\r\n                  //               </div>\r\n                  //             );\r\n                })}\r\n              </Container>\r\n              <br />\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn\"\r\n                onClick={this.showAddPrdouctForm.bind(this)}\r\n              >\r\n                Add Product\"Farmers\"\r\n              </button>\r\n              <br />\r\n              <br />\r\n\r\n              {/* <Router> */}\r\n              <div>\r\n                <button>\r\n                  <Link to=\"/Registeration\">Registeration</Link>\r\n                </button>\r\n\r\n                <button>\r\n                  <Link to=\"/Login\">Log In</Link>\r\n                </button>\r\n              </div>\r\n              {/* </Router> */}\r\n            </div>\r\n          ) : (\r\n            this.state.component\r\n          )}\r\n          <br />\r\n          <br />\r\n        </main>\r\n\r\n        <footer className=\"footer\">\r\n          For more information call us at :059-999999\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Home);\r\n"]},"metadata":{},"sourceType":"module"}