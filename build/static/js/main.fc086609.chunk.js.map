{"version":3,"sources":["components/Login/Login.js","components/Registeration/Registeration.js","components/UsersProduct/UsersProduct.js","Home.js","components/Product/Product.js","components/Cart/Cart.js","components/Navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["Login","props","state","username","password","handleChange","bind","event","this","setState","target","name","value","preventDefault","console","log","axios","get","user","then","response","localStorage","setItem","data","_id","history","push","alert","catch","error","setUserAuth","className","id","Form","onSubmit","handleSubmit","Group","controlId","Label","Control","placeholder","onChange","required","type","Button","React","Component","withRouter","Registeration","email","mobile","e","that","post","handelSubmite","handelChange","to","UsersProduct","handleLangChange","onSelectLanguage","products","price","map","i","key","Home","component","items","quanity","q","handleLanguage","addToCart","product","user_id","getItem","err","res","counter","src","alt","width","height","Container","fluid","Row","Col","CardDeck","Card","Header","Body","Title","ListGroup","ListGroupItem","inline","FormControl","onClick","product_id","quantity","parseInt","style","backgroundColor","showAddPrdouctForm","Product","count","Table","striped","bordered","hover","productsCart","length","Cart","countAdd","NavBar","Navbar","Brand","Nav","App","isAuthenticated","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.fc086609.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { withRouter } from 'react-router-dom';\r\nimport { Form,Button } from 'react-bootstrap';\r\n\r\nimport axios from 'axios';\r\n\r\nclass Login extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username: '',\r\n      password: '',\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  }\r\n  \r\n  handleSubmit(event) {\r\n   event.preventDefault();\r\n    const { username, password } = this.state;\r\n    //localStorage.setItem('userId',JSON.stringify(this.state));\r\n   console.log('username, password',username, password)\r\n    axios\r\n      .get(\r\n        `http://localhost:4000/login/${this.state.username}/${this.state.password}`,\r\n        {\r\n          user: {\r\n            username: username,\r\n            password: password,\r\n          },\r\n        },\r\n      )\r\n      .then((response) => {\r\n        console.log('heeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee',response);\r\n        if (response) {\r\n          // this.props.setUserAuth(true);\r\n          // TODO: SAVE USER ID TO LOCAL STORAGE \r\n           localStorage.setItem('user_id',response.data[0]._id );\r\n          // const user_id = localStorage.getItem('userID');\r\n          this.props.history.push('/Cart');\r\n        } else {\r\n          alert('LogIn faild . . Make sure the information is correct');\r\n\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log('login error', error);\r\n        this.props.setUserAuth(false);\r\n      });\r\n      \r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n      <div className='inner-container'>\r\n        <div className='h1'>\r\n          <h1 id='header'>\r\n            <span id='spanw'> Dairy product Milk and cheese </span> <span id='finde'>APP</span>{' '}\r\n          </h1>\r\n        </div>\r\n        <h1 className='header'>Account Login</h1>\r\n        <Form  onSubmit={this.handleSubmit.bind(this)} >\r\n  <Form.Group controlId=\"formGroupEmail\">\r\n    <Form.Label>User Name</Form.Label>\r\n    <Form.Control name='username'\r\n            placeholder='username'\r\n            value={this.state.username}\r\n            onChange={this.handleChange}\r\n            required />\r\n  </Form.Group>\r\n  <Form.Group controlId=\"formGroupPassword\">\r\n    <Form.Label>Password</Form.Label>\r\n    <Form.Control   type='password'\r\n            name='password'\r\n            placeholder='Password'\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            required />\r\n  </Form.Group>\r\n  <Button className=\"safa\" type=\"submit\">\r\n    Log In\r\n  </Button>\r\n</Form>\r\n{/* \r\n        <form onSubmit={this.handleSubmit.bind(this)}>\r\n          <h1 className='header'>Account Login</h1>\r\n          <hr className='hr' />\r\n          <input\r\n            className='login-input'\r\n            name='username'\r\n            placeholder='username'\r\n            value={this.state.username}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <br />\r\n          <input\r\n            className='login-input'\r\n            type='password'\r\n            name='password'\r\n            placeholder='Password'\r\n            value={this.state.password}\r\n            onChange={this.handleChange}\r\n            required\r\n          />\r\n          <br />\r\n          <button> Login</button>\r\n          <br />\r\n          Dont have an account ?{' '}\r\n          <Link to=\"/Registeration\" className='link'>\r\n            {' '}\r\n            register now\r\n          </Link>{' '}\r\n        </form> */}\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default withRouter(Login);","import React from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nimport { Link, withRouter } from \"react-router-dom\";\r\n\r\nclass Registeration extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      mobile: \"\",\r\n      password: \"\",\r\n    };\r\n  }\r\n  handelChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n  handelSubmite(e) {\r\n    console.log(\r\n      \"tryin to reeggggggggggggggggggggggggggggggggggggggggggggggggg\"\r\n    );\r\n    e.preventDefault();\r\n    const { username, email, mobile, password } = this.state;\r\n    console.log(username, email, mobile, password);\r\n    var that = this;\r\n    axios\r\n      .post(`http://localhost:4000/users`, {\r\n        username,\r\n        mobile,\r\n        email,\r\n        password,\r\n      })\r\n      .then((response) => {\r\n        console.log(\"I have a response \");\r\n        if (response.data) {\r\n          console.log(\"NOW LOGIN TO CONFIRM YOUR  ACCOUNT\");\r\n          // this.props.setUserAuth(true);\r\n          this.setState({\r\n            username: \"\",\r\n            email: \"\",\r\n            mobile: \"\",\r\n            password: \"\",\r\n          });\r\n          console.log(that);\r\n          that.props.history.push(\"/Home\");\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"registration error\", error);\r\n        alert(\"THIS USERNAME IS ALREADY USED TRY ANOTHER ONE\");\r\n        // this.props.setUserAuth(false);\r\n        this.setState({\r\n          username: \"\",\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"inner-container\">\r\n        <div className=\"h1\">\r\n          <h1>Dairy products Milk and cheese </h1>\r\n        </div>\r\n        <form onSubmit={this.handelSubmite.bind(this)} className=\"box\">\r\n          <h1 className=\"header\">Account Sign Up</h1>\r\n          <hr className=\"hr\" />\r\n          <br />\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"username\"\r\n              value={this.state.username}\r\n              onChange={this.handelChange.bind(this)}\r\n              className=\"login-input\"\r\n              placeholder=\"Username\"\r\n            />\r\n          </div>\r\n          <br />\r\n\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"email\"\r\n              value={this.state.email}\r\n              onChange={this.handelChange.bind(this)}\r\n              className=\"login-input\"\r\n              placeholder=\"Email\"\r\n            />\r\n          </div>\r\n          <br />\r\n\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"String\"\r\n              name=\"mobile\"\r\n              value={this.state.mobile}\r\n              onChange={this.handelChange.bind(this)}\r\n              className=\"login-input\"\r\n              placeholder=\"mobile\"\r\n            />\r\n          </div>\r\n          <br />\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              value={this.state.password}\r\n              onChange={this.handelChange.bind(this)}\r\n              className=\"login-input\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </div>\r\n          <br />\r\n          <button className=\"safa\">Sign Up</button>\r\n          <br />\r\n          <p>\r\n            you have alredy account !{\" \"}\r\n            <Link to=\"/Login\" className=\"link\">\r\n              {\" \"}\r\n              Log IN Now!\r\n            </Link>\r\n          </p>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Registeration);\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nclass UsersProduct extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      price: \"\",\r\n      products: [],\r\n    };\r\n  }\r\n\r\n  handelChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n  handleLangChange = () => {\r\n    this.props.onSelectLanguage(this.state.products);\r\n  };\r\n  handelSubmite(e) {\r\n    e.preventDefault();\r\n    console.log(\"Inside submit\");\r\n    const { name, price } = this.state;\r\n    axios\r\n      .post(`http://localhost:4000/product`, {\r\n        name,\r\n        price,\r\n      })\r\n      .then((response) => {\r\n        console.log(response);\r\n        this.setState({ products: [...this.state.products, response.data] });\r\n        this.handleLangChange();\r\n      })\r\n      .catch((error) => {\r\n        console.log(\"adding error\", error);\r\n      });\r\n    // axios\r\n    //  .get(`http://localhost:4000/${this.state.name}`)\r\n\r\n    //    .then((result) =>{setState})\r\n    //    .catch((err) => {\r\n    //    console.log(\"error\",err);\r\n    // });\r\n  }\r\n\r\n  render() {\r\n    console.log(this.state.products);\r\n    return (\r\n      <div className=\"inner-container\">\r\n        <div className=\"h1\">\r\n          <h1>Dairy products Milk and cheese</h1>\r\n        </div>\r\n        <div>\r\n          {this.state.products.map((e, i) => (\r\n            <p key={i}>\r\n              name : {e.name} - price : {e.price}\r\n            </p>\r\n          ))}\r\n        </div>\r\n        <form onSubmit={this.handelSubmite.bind(this)} className=\"box\">\r\n          <h1 className=\"header\">Add Product</h1>\r\n          <hr className=\"hr\" />\r\n          <br />\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={this.state.name}\r\n              onChange={this.handelChange.bind(this)}\r\n              className=\"adding-input\"\r\n              placeholder=\"name\"\r\n            />\r\n          </div>\r\n          <br />\r\n\r\n          <div className=\"input-group\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"price\"\r\n              value={this.state.price}\r\n              onChange={this.handelChange.bind(this)}\r\n              className=\"adding-input\"\r\n              placeholder=\"price\"\r\n            />\r\n          </div>\r\n          <br />\r\n\r\n          <br />\r\n          {/* <button type='submit' className='btn' onClick={this.showAddPrdouctForm.bind(this)}>add product</button> */}\r\n          <button type=\"submit\" className=\"safa\">\r\n            {\" \"}\r\n            add Product{\" \"}\r\n          </button>\r\n\r\n          <br />\r\n        </form>\r\n        <br />\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UsersProduct;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport {\r\n  Card,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n  FormControl,\r\n  Form,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  CardDeck,\r\n} from \"react-bootstrap\";\r\nimport \"./App.css\";\r\n//import Product  from './components/Product/Product.js';\r\nimport UsersProduct from \"./components/UsersProduct/UsersProduct.js\";\r\n\r\n//import Registeration from './components/Registeration/Registeration.js';\r\n\r\n//import { get } from 'mongoose';\r\n\r\nclass Home extends React.Component {\r\n  state = {\r\n    component: null,\r\n    items: [],\r\n    products: [],\r\n    quanity: { id: null, q: 0 },\r\n  };\r\n\r\n  // show the saved data in the home page\r\n  componentDidMount() {\r\n    axios.get(`http://localhost:4000/products`).then((res) => {\r\n      const products = res.data;\r\n      this.setState({ products });\r\n    });\r\n  }\r\n  //show the add product form\r\n  showAddPrdouctForm() {\r\n    this.setState({\r\n      component: <UsersProduct onSelectLanguage={this.handleLanguage} />,\r\n    });\r\n  }\r\n  handleLanguage = (products) => {\r\n    this.setState({ products: products });\r\n  };\r\n\r\n  addToCart = (product) => {\r\n    console.log(\"productinfo : \", product);\r\n    product.user_id = localStorage.getItem(\"user_id\");\r\n    var that = this;\r\n    axios\r\n      .post(\"http://localhost:4000/cart\", product)\r\n      .then((data) => {\r\n        console.log(data);\r\n        that.props.history.push(\"/Cart\");\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    var counter = 0;\r\n    // var component;\r\n    console.log(this.state);\r\n    return (\r\n      <div className=\"grid-container\">\r\n        <main className=\"main\">\r\n          {this.state.component == null ? (\r\n            <div className=\"content\">\r\n              <div className=\"about\">\r\n                <p>\r\n                  {/* <br /> */}\r\n                  Welcome to our our website.\r\n                  <br />\r\n                  We are group of farmers in the village,who sell organic and\r\n                  homemade dairy products.\r\n                  <br />\r\n                  If you like to know more about our products you can register\r\n                  and have account.If you already have an account you can log in\r\n                  and choose your favorite product.\r\n                </p>\r\n              </div>\r\n\r\n              {/* //here is where the images in the home page   */}\r\n              <ul>\r\n                <img className=\"first\" src=\"/images/cheese.jpg\" alt=\"product\" />\r\n\r\n                <img\r\n                  className=\"sec\"\r\n                  src=\"/images/3371550.jpg\"\r\n                  width=\"275\"\r\n                  height=\"180\"\r\n                  alt=\"product\"\r\n                />\r\n\r\n                <img\r\n                  className=\"lass\"\r\n                  src=\"/images/pure-ghee-1.jpg\"\r\n                  width=\"275\"\r\n                  height=\"180\"\r\n                  alt=\"product\"\r\n                />\r\n              </ul>\r\n              <Container className=\"c1\" fluid=\"md\">\r\n                {this.state.products.map((product, i) => {\r\n                  counter++;\r\n                  if (counter === 1) {\r\n                    return (\r\n                      <Row key={i}>\r\n                        {this.state.products[i] ? (\r\n                          <Col>\r\n                            <CardDeck>\r\n                              <Card>\r\n                                <Card.Header className=\"header\">\r\n                                  Dairy Product\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                  <Card.Title>Product</Card.Title>\r\n                                  <ListGroup className=\"list-group-flush\">\r\n                                    <ListGroupItem>\r\n                                      Name :{\" \"}\r\n                                      {this.state.products[i]\r\n                                        ? this.state.products[i].name\r\n                                        : \"\"}\r\n                                    </ListGroupItem>\r\n                                    <ListGroupItem>\r\n                                      Price :{\" \"}\r\n                                      {this.state.products[i]\r\n                                        ? this.state.products[i].price\r\n                                        : \"\"}\r\n                                    </ListGroupItem>\r\n                                  </ListGroup>\r\n\r\n                                  <Form inline>\r\n                                    <FormControl\r\n                                      type=\"text\"\r\n                                      placeholder=\"count\"\r\n                                      className=\"mr-sm-2\"\r\n                                      onChange={(e) =>\r\n                                        this.setState({\r\n                                          quanity: {\r\n                                            id: this.state.products[i]._id,\r\n                                            q: e.target.value,\r\n                                          },\r\n                                        })\r\n                                      }\r\n                                    />\r\n\r\n                                    <Button\r\n                                      className=\"safa\"\r\n                                      // variant=\"info\"\r\n                                      onClick={() => {\r\n                                        this.addToCart({\r\n                                          product_id: product._id,\r\n                                          quantity: parseInt(\r\n                                            this.state.quanity.q\r\n                                          ),\r\n                                        });\r\n                                      }}\r\n                                    >\r\n                                      add to cart\r\n                                    </Button>\r\n                                  </Form>\r\n                                </Card.Body>\r\n                              </Card>\r\n                            </CardDeck>\r\n                          </Col>\r\n                        ) : (\r\n                          <Col></Col>\r\n                        )}\r\n                        {this.state.products[i + 1] ? (\r\n                          <Col>\r\n                            <CardDeck>\r\n                              <Card>\r\n                                <Card.Header\r\n                                  className=\"header\"\r\n                                  id=\"\"\r\n                                  style={{ backgroundColor: \"#ff99cc\" }}\r\n                                >\r\n                                  Dairy Product\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                  <Card.Title>Product</Card.Title>\r\n                                  <ListGroup className=\"list-group-flush\">\r\n                                    <ListGroupItem>\r\n                                      Name :{\" \"}\r\n                                      {this.state.products[i + 1]\r\n                                        ? this.state.products[i + 1].name\r\n                                        : \"\"}{\" \"}\r\n                                    </ListGroupItem>\r\n                                    <ListGroupItem>\r\n                                      {\" \"}\r\n                                      Price :{\" \"}\r\n                                      {this.state.products[i + 1]\r\n                                        ? this.state.products[i + 1].price\r\n                                        : \"\"}\r\n                                    </ListGroupItem>\r\n                                  </ListGroup>\r\n\r\n                                  <Form inline>\r\n                                    <FormControl\r\n                                      type=\"text\"\r\n                                      placeholder=\"count\"\r\n                                      className=\"mr-sm-2\"\r\n                                      onChange={(e) =>\r\n                                        this.setState({\r\n                                          quanity: {\r\n                                            id: this.state.products[i + 1]\r\n                                              ? this.state.products[i + 1]._id\r\n                                              : \"\",\r\n                                            q: e.target.value,\r\n                                          },\r\n                                        })\r\n                                      }\r\n                                    />\r\n\r\n                                    <Button\r\n                                      className=\"safa\"\r\n                                      onClick={() => {\r\n                                        this.addToCart({\r\n                                          product_id: this.state.products[i + 1]\r\n                                            ? this.state.products[i + 1]._id\r\n                                            : \"\",\r\n                                          quantity: parseInt(\r\n                                            this.state.quanity.q\r\n                                          ),\r\n                                        });\r\n                                      }}\r\n                                    >\r\n                                      add to cart\r\n                                    </Button>\r\n                                  </Form>\r\n                                </Card.Body>\r\n                              </Card>\r\n                            </CardDeck>\r\n                          </Col>\r\n                        ) : (\r\n                          <Col></Col>\r\n                        )}\r\n                        {this.state.products[i + 2] ? (\r\n                          <Col>\r\n                            <CardDeck>\r\n                              <Card>\r\n                                <Card.Header className=\"header\">\r\n                                  Dairy Product\r\n                                </Card.Header>\r\n                                <Card.Body>\r\n                                  <Card.Title>Product</Card.Title>\r\n                                  <ListGroup className=\"list-group-flush\">\r\n                                    <ListGroupItem>\r\n                                      Name :{\" \"}\r\n                                      {this.state.products[i + 2]\r\n                                        ? this.state.products[i + 2].name\r\n                                        : \"\"}{\" \"}\r\n                                    </ListGroupItem>\r\n                                    <ListGroupItem>\r\n                                      {\" \"}\r\n                                      Price :{\" \"}\r\n                                      {this.state.products[i + 2]\r\n                                        ? this.state.products[i + 2].price\r\n                                        : \"\"}\r\n                                    </ListGroupItem>\r\n                                  </ListGroup>\r\n\r\n                                  <Form inline>\r\n                                    <FormControl\r\n                                      type=\"text\"\r\n                                      placeholder=\"count\"\r\n                                      className=\"mr-sm-2\"\r\n                                      onChange={(e) =>\r\n                                        this.setState({\r\n                                          quanity: {\r\n                                            id: this.state.products[i + 2]\r\n                                              ? this.state.products[i + 2]._id\r\n                                              : \"\",\r\n                                            q: e.target.value,\r\n                                          },\r\n                                        })\r\n                                      }\r\n                                    />\r\n\r\n                                    <Button\r\n                                      className=\"safa\"\r\n                                      // variant=\"success\"\r\n                                      onClick={() => {\r\n                                        this.addToCart({\r\n                                          product_id: this.state.products[i + 2]\r\n                                            ? this.state.products[i + 2]._id\r\n                                            : \"\",\r\n                                          quantity: parseInt(\r\n                                            this.state.quanity.q\r\n                                          ),\r\n                                        });\r\n                                      }}\r\n                                    >\r\n                                      add to cart\r\n                                    </Button>\r\n                                  </Form>\r\n                                </Card.Body>\r\n                              </Card>\r\n                            </CardDeck>\r\n                          </Col>\r\n                        ) : (\r\n                          <Col></Col>\r\n                        )}\r\n                      </Row>\r\n                    );\r\n                  } else {\r\n                    counter++;\r\n                    if (counter === 3) {\r\n                      counter = 0;\r\n                    }\r\n                    return;\r\n                  }\r\n                  //             return (\r\n                  //               <div className=\"\" key={i}>\r\n                  //                 {/* <Row> */}\r\n                  //                 {/* <Col> */}\r\n                  //                 <Col>\r\n                  //                   <CardDeck>\r\n                  //                     <Card>\r\n                  //                       <Card.Header className=\"header1\">\r\n                  //                         Dairy Product\r\n                  //                       </Card.Header>\r\n                  //                       <Card.Body>\r\n                  //                         <Card.Title>Product</Card.Title>\r\n                  //                         <ListGroup className=\"list-group-flush\">\r\n                  //                           <ListGroupItem>\r\n                  //                             Name : {product.name}{\" \"}\r\n                  //                           </ListGroupItem>\r\n                  //                           <ListGroupItem>\r\n                  //                             {\" \"}\r\n                  //                             Price : {product.price}\r\n                  //                           </ListGroupItem>\r\n                  //                         </ListGroup>\r\n                  //                         {/* <Card.Text>\r\n                  // Name : {product.name}\r\n                  // </Card.Text>\r\n\r\n                  // <Card.Text>\r\n                  // Price : {product.price}\r\n                  // </Card.Text> */}\r\n\r\n                  //                         <Form inline>\r\n                  //                           <FormControl\r\n                  //                             type=\"text\"\r\n                  //                             placeholder=\"count\"\r\n                  //                             className=\"mr-sm-2\"\r\n                  //                             onChange={(e) =>\r\n                  //                               this.setState({\r\n                  //                                 quanity: {\r\n                  //                                   id: product._id,\r\n                  //                                   q: e.target.value,\r\n                  //                                 },\r\n                  //                               })\r\n                  //                             }\r\n                  //                           />\r\n\r\n                  //                           <Button\r\n                  //                             variant=\"success\"\r\n                  //                             onClick={() => {\r\n                  //                               this.addToCart({\r\n                  //                                 product_id: product._id,\r\n                  //                                 quantity: parseInt(this.state.quanity.q),\r\n                  //                               });\r\n                  //                             }}\r\n                  //                           >\r\n                  //                             add to cart\r\n                  //                           </Button>\r\n                  //                         </Form>\r\n                  //                       </Card.Body>\r\n                  //                     </Card>\r\n                  //                   </CardDeck>\r\n                  //                 </Col>\r\n                  //                 {/* </Col> */}\r\n\r\n                  //                 {/* </Row>    */}\r\n\r\n                  //                 {/* <Card>\r\n                  //            <Card.Header>Dairy Product</Card.Header>\r\n                  //            <Card.Body>\r\n                  //               <Card.Title>Product</Card.Title>\r\n                  //               <ListGroup className=\"list-group-flush\">\r\n                  //                  <ListGroupItem>Name : {product.name} </ListGroupItem>\r\n                  //                  <ListGroupItem> Price : {product.price}</ListGroupItem>\r\n\r\n                  //               </ListGroup>\r\n                  //               <Form inline>\r\n                  //                 <FormControl type=\"text\" placeholder=\"count\" className=\"mr-sm-2\"  onChange={(e) => this.setState({quanity:{id:product._id, q:e.target.value}})}/>\r\n\r\n                  //              <Button variant=\"outline-light\" onClick={\r\n                  //           () =>{\r\n                  //             this.addToCart({product_id: product._id, quantity:parseInt(this.state.quanity.q)});\r\n                  //           }\r\n                  //         }>add to cart</Button>\r\n                  //         </Form>\r\n                  //            </Card.Body>\r\n                  //         </Card> */}\r\n\r\n                  //                 {/* <p key={i}>Name : {product.name} - Price : {product.price}</p>\r\n\r\n                  //         <input type = 'text'  onChange={(e) => this.setState({quanity:{id:product._id, q:e.target.value}})}></input>\r\n                  //         <button   onClick={\r\n                  //           () =>{\r\n                  //             this.addToCart({product_id: product._id, quantity:parseInt(this.state.quanity.q)});\r\n                  //           }\r\n                  //         }>add to cart </button> */}\r\n                  //               </div>\r\n                  //             );\r\n                })}\r\n              </Container>\r\n              <br />\r\n\r\n              <button\r\n                type=\"submit\"\r\n                className=\"safa\"\r\n                onClick={this.showAddPrdouctForm.bind(this)}\r\n              >\r\n                Add Product\"Farmers\"\r\n              </button>\r\n              <br />\r\n              <br />\r\n\r\n              {/* <Router> */}\r\n\r\n              {/* </Router> */}\r\n            </div>\r\n          ) : (\r\n            this.state.component\r\n          )}\r\n          <br />\r\n          <br />\r\n        </main>\r\n\r\n        <footer className=\"footer\">\r\n          For more information call us at :059-999999\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Home);\r\n","import React from \"react\";\r\n//import axios from \"axios\";\r\nimport { Table } from 'react-bootstrap';\r\n\r\nclass Product extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      name: \"\",\r\n      price: \"\",\r\n      count:\"\"\r\n    };\r\n  }\r\n\r\n  handelChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n  \r\n\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div>\r\n        {/* <table>\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Price</th>\r\n              <th>Count</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.productsCart.length > 0 ?this.props.productsCart.map((e, i) => (\r\n              <tr key={i}>\r\n                <td> {e.name}</td>\r\n                <td> {e.price}</td>\r\n                <td>{e.quantity}</td>\r\n      \r\n              </tr>\r\n            )): 'No items in the Cart'}\r\n          </tbody>\r\n        </table> */}\r\n\r\n        <Table striped bordered hover>\r\n        <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Price</th>\r\n              <th>Count</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.productsCart.length > 0 ?this.props.productsCart.map((e, i) => (\r\n              <tr key={i}>\r\n                <td> {e.name}</td>\r\n                <td> {e.price}</td>\r\n                <td>{e.quantity}</td>\r\n      \r\n              </tr>\r\n            )): 'No items in the Cart'}\r\n          \r\n  \r\n  </tbody>\r\n</Table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Product;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\nimport Products from \"../Product/Product\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Cart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      items: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //TODO GET USER ID FROM LOCALSTORAGE\r\n    var user_id = localStorage.getItem(\"user_id\");\r\n    axios\r\n      .post(`http://localhost:4000/carts`, { user_id: user_id })\r\n      .then((res) => {\r\n        const items = res.data;\r\n        console.log(\"cart iteeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeems\", items);\r\n        this.setState({ items });\r\n      });\r\n  }\r\n\r\n  countAdd = () => {\r\n    this.setState.count++;\r\n  };\r\n\r\n  handelChange(e) {\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  }\r\n\r\n  // handelSubmite(e) {\r\n  //   e.preventDefault();\r\n  //   console.log(\"Inside submit\");\r\n  //  const { name, price, count, total } = this.state;\r\n  //   axios.get(`http://localhost:4000/products`).then((res) => {\r\n  //     const productsCart = res.data;\r\n  //     this.setState({ productsCart: productsCart });\r\n  //   });\r\n  // }\r\n\r\n  render() {\r\n    console.log(this.state.productsCart);\r\n\r\n    return (\r\n      <div className=\"inner-container\">\r\n        <div className=\"h1\">\r\n          <h1> </h1>\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <h1 className=\"header\">My Cart</h1>\r\n        <hr className=\"hr\" />\r\n        <br />\r\n        <br />\r\n        <br />\r\n\r\n        <div className=\"Cart\">\r\n          {this.state.items.length !== 0 ? (\r\n            <Products productsCart={this.state.items} />\r\n          ) : (\r\n            \"No items in the Cart\"\r\n          )}\r\n        </div>\r\n        <br />\r\n        <br />\r\n        <button className=\"safa\">\r\n          <Link to=\"/Home\">Go Home</Link>\r\n        </button>\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n        <br />\r\n\r\n        <footer className=\"foot\">\r\n          For more information call us at :059-999999\r\n        </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Cart;\r\n","import React from \"react\";\r\nimport '../../App.css';\r\nimport { Navbar,Nav } from 'react-bootstrap';\r\nimport {\r\n    // BrowserRouter as Router,\r\n    Link\r\n  }  from \"react-router-dom\";\r\n\r\nconst NavBar=()=> {\r\n  \r\n  return(\r\n    <div className=\"App\">\r\n <Navbar className='header1'>\r\n   \r\n <Navbar.Brand  className=\"dairy\">\r\n      <img\r\n        alt=\"\"\r\n        src=\"/images/istockphoto.jpg\" \r\n        width=\"40\"\r\n        height=\"40\"\r\n        className=\"d-inline-block align-top\"\r\n        \r\n      />{' '}\r\n     Dairy App\r\n    </Navbar.Brand>\r\n    {/* <Navbar.Brand  className=\"dairy\">Dairy App</Navbar.Brand> */}\r\n  \r\n    <Nav className=\"mr-auto\">\r\n      <Nav className=\"home\"> <Link to=\"/Home\">Home</Link></Nav>\r\n      <Nav className=\"registeration\"><Link to=\"/Registeration\">Registeration</Link></Nav>\r\n      <Nav className=\"registeration\"><Link to=\"/Login\">Login</Link> </Nav>\r\n      <Nav className=\"registeration\"><Link to=\"/Cart\">Cart</Link></Nav>\r\n    </Nav>\r\n    \r\n  </Navbar>\r\n    </div>\r\n)\r\n \r\n}\r\nexport default NavBar;\r\n","import React from \"react\";\n\nimport Login from \"./components/Login/Login\";\n//import UsersProduct from './components/UsersProduct/UsersProduct.js';\nimport Registeration from \"./components/Registeration/Registeration.js\";\nimport Home from \"./Home\";\nimport Cart from \"./components/Cart/Cart\";\nimport NavBar from \"./components/Navbar/Navbar\";\n\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  setUserAuth = (value) => this.setState({ isAuthenticated: true });\n  render() {\n    return (\n      <div className=\"app\">\n        <Router>\n          <NavBar />\n\n          <Switch>\n            <Route path=\"/\" exact={true} component={Home} />\n            <Route path=\"/Cart\" exact={true} component={Cart} />\n\n            <Login\n              path=\"/Login\"\n              setUserAuth={this.setUserAuth}\n              component={Login}\n            />\n\n            {/* <Route exact path=\"/Registeration\"> */}\n            <Registeration\n              path=\"/Registeration\"\n              setUserAuth={this.setUserAuth}\n              component={Registeration}\n            />\n            {/* </Route> */}\n            {/* <PrivateRoute isAuthenticated={this.state.isAuthenticated} path=\"/\"> */}\n            <Home />\n            {/* </PrivateRoute> */}\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n// function PrivateRoute({ children, isAuthenticated, ...rest }) {\n//   return (\n//     <Route\n//       {...rest}\n//       render={({ location }) =>\n//         isAuthenticated ? (\n//           children\n//         ) : (\n//           <Redirect\n//             to={{\n//               pathname: \"/Login\",\n//               state: { from: location },\n//             }}\n//           />\n//         )\n//       }\n//     />\n//   );\n// }\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}